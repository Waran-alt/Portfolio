# =================================================================
# GIT ATTRIBUTES - CROSS-PLATFORM LINE ENDING HANDLING
# =================================================================
# This file ensures consistent line endings and file handling across
# different operating systems and development environments.

# =================================================================
# LINE ENDING HANDLING
# =================================================================
# Force LF line endings for all text files
* text=auto eol=lf

# Explicitly set LF for specific file types
*.js text eol=lf
*.jsx text eol=lf
*.ts text eol=lf
*.tsx text eol=lf
*.json text eol=lf
*.md text eol=lf
*.yml text eol=lf
*.yaml text eol=lf
*.css text eol=lf
*.scss text eol=lf
*.html text eol=lf
*.xml text eol=lf
*.svg text eol=lf
*.graphql text eol=lf
*.gql text eol=lf
*.sql text eol=lf
*.sh text eol=lf
*.bash text eol=lf
*.zsh text eol=lf
*.fish text eol=lf
*.ps1 text eol=lf
*.bat text eol=lf
*.cmd text eol=lf
*.dockerfile text eol=lf
*.dockerignore text eol=lf
*.gitignore text eol=lf
*.gitattributes text eol=lf
*.editorconfig text eol=lf
*.eslintrc* text eol=lf
*.prettierrc* text eol=lf
*.babelrc* text eol=lf
*.browserslistrc text eol=lf
*.env* text eol=lf
*.example text eol=lf
*.sample text eol=lf
*.template text eol=lf
*.config.js text eol=lf
*.config.ts text eol=lf
*.config.mjs text eol=lf
*.config.cjs text eol=lf
*.config.json text eol=lf
*.config.yml text eol=lf
*.config.yaml text eol=lf

# =================================================================
# BINARY FILES
# =================================================================
# Mark binary files to prevent line ending conversion
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.ico binary
*.svg binary
*.woff binary
*.woff2 binary
*.ttf binary
*.eot binary
*.otf binary
*.pdf binary
*.zip binary
*.tar.gz binary
*.tar.bz2 binary
*.rar binary
*.7z binary
*.exe binary
*.dll binary
*.so binary
*.dylib binary
*.class binary
*.jar binary
*.war binary
*.ear binary
*.apk binary
*.ipa binary
*.deb binary
*.rpm binary
*.msi binary
*.pkg binary
*.dmg binary
*.iso binary
*.img binary
*.bin binary
*.dat binary
*.db binary
*.sqlite binary
*.sqlite3 binary
*.log binary
*.lock binary
*.min.js binary
*.min.css binary
*.bundle.js binary
*.bundle.css binary

# =================================================================
# DIFF HANDLING
# =================================================================
# Use external diff tools for specific file types
*.png diff=image
*.jpg diff=image
*.jpeg diff=image
*.gif diff=image
*.ico diff=image
*.pdf diff=pdf

# =================================================================
# MERGE STRATEGIES
# =================================================================
# Use union merge for lock files
package-lock.json merge=union
yarn.lock merge=union
pnpm-lock.yaml merge=union

# Use ours merge for config files that should not be merged
*.config.local.* merge=ours
.env.local merge=ours
.env.production merge=ours
.env.staging merge=ours

# =================================================================
# FILTERS
# =================================================================
# Apply filters for specific file types
*.md filter=markdown
*.mdx filter=markdown

# =================================================================
# EXPORT IGNORE
# =================================================================
# Files to exclude from archives
.gitattributes export-ignore
.gitignore export-ignore
.gitkeep export-ignore
.dockerignore export-ignore
.eslintignore export-ignore
.prettierignore export-ignore
README.md export-ignore
CHANGELOG.md export-ignore
LICENSE export-ignore
*.test.* export-ignore
*.spec.* export-ignore
__tests__ export-ignore
test export-ignore
tests export-ignore
coverage export-ignore
.nyc_output export-ignore
node_modules export-ignore
dist export-ignore
build export-ignore
.next export-ignore
out export-ignore
.cache export-ignore
.parcel-cache export-ignore
.turbo export-ignore
.env* export-ignore
 