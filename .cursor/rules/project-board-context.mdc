---
description: Provides context about the Markdown Kanban project board.
globs: .cursor/project-board.md
alwaysApply: false
---
# Project Board Context

This file contains the Portfolio project's Markdown Kanban board with simple sequential task IDs for easy reference.

## Board Structure

**Columns:**
- **To Do**: Tasks that are planned but not yet started (14 active tasks)
- **In Progress**: Tasks currently being worked on (2 active tasks)
- **Done**: Completed tasks (2 completed)

## Simple ID System

### **Current Highest ID: 033**

Tasks use simple sequential IDs in format `[XXX]`:
- **Format**: `[001]`, `[002]`, `[003]`, etc.
- **Padding**: Always 3 digits (handles up to 999 tasks)
- **Auto-increment**: Always check current highest + 1 for new tasks

### **Usage Examples**
- **Easy reference**: "Work on #005" or "Start task [010]"
- **Commit messages**: `fix(deps): resolve package issues (#005)`
- **Discussions**: "Let's prioritize #002 before #008"
- **Progress tracking**: "Completed #001, moving to #003"

## Current Task Summary

### **High Priority (Due July 5-8, 2025)**
- [003] Initialize Monorepo Structure (IN PROGRESS - mostly complete)
- [017] WSL2 Development Environment Setup (IN PROGRESS - mostly complete)
- [018] Create VS Code Tasks Configuration
- [019] Add Environment Variable Support to Launch Configs
- [024] Implement Dynamic Project Showcase System
- [025] Create Contact Form System with Email Integration
- [030] Create CI/CD Pipeline
- [031] Implement Security Hardening

### **Medium Priority (July 10-22, 2025)**
- [008] Migrate Frontend to Monorepo
- [020] Create Docker Debug Configurations
- [021] Add Missing Scripts to Root Package.json
- [022] Implement Storybook for Component Development
- [023] Add API Mocking with MSW (Mock Service Worker)
- [026] Implement Blog/Articles System
- [027] Create Skills Matrix Visualization
- [028] Add Performance Monitoring and Analytics
- [029] Implement SEO Optimization System
- [032] Create Admin Dashboard

### **Low Priority (August 2025)**
- [010] Production Environment Strategy Documentation
- [011] Database Migration System Implementation
- [012] Docker Secret Management Implementation
- [014] Automated Backup System Setup
- [015] SSL Certificate Automation (Let's Encrypt)
- [016] Centralized Logging Implementation

## Decision Points Requiring Input

Several tasks need **DECISION NEEDED** resolution:

1. **[004]**: Environment strategy (explicit vs env_file vs hybrid vs external secrets)
2. **[007]**: Bun integration (development vs production use assessment)
3. **[012]**: Secret management (Docker Secrets vs External Vault vs File-based)
4. **[016]**: Logging solution (ELK Stack vs Grafana Loki vs Cloud solutions)

## Technical Context

**Based on Analysis From:**
- MONOREPO_SETUP_GUIDE.md: Detailed Yarn+Changesets implementation
- PACKAGE_AUDIT.md: Critical package.json issues and fixes
- ENV_STRATEGY_ANALYSIS.md: Environment variable strategy options
- PRODUCTION_READINESS_ASSESSMENT.md: Critical production gaps
- ASSISTANT_MEMO.md: User preferences and to-do items

**Related Cursor Rules:**
- commit-message-guide.mdc: Provides conventional commit message guidance

## Auto-Increment Instructions for AI

**When adding new tasks:**

1. **Find highest existing ID** in the board (currently 033)
2. **Increment by 1** (next would be 018)
3. **Zero-pad to 3 digits** ([018])
4. **Update this rule** with new highest ID
5. **Format**: `- [XXX] Task Title`

**When removing tasks:**
- **Don't reuse IDs** - once used, always skip that number
- **Keep sequential integrity** for reference history

**Auto-increment Algorithm:**
```
HIGHEST_ID = scan_board_for_highest_id()
NEW_ID = HIGHEST_ID + 1
FORMAT = f"[{NEW_ID:03d}]"  # Zero-pad to 3 digits
UPDATE_CONTEXT_RULE(NEW_ID)
```

## Task Categories (via tags, not IDs)

Tasks are categorized by their `tags` field:
- **Setup/Infrastructure**: `[setup, tooling, architecture]`
- **Dependencies**: `[dependencies, cleanup, backend, frontend]`
- **Development Tools**: `[tooling, code-quality, git, automation]`
- **Production**: `[production, security, monitoring, deployment]`
- **Documentation**: `[documentation, ai-assistance]`

## AI Assistant Instructions

When working with this project board:

1. **Use simple ID references**: "#005" or "[005]" or "task 005"
2. **Auto-increment new tasks**: Always check highest ID + 1
3. **Update this rule**: When adding tasks, update "Current Highest ID" 
4. **Respect priority order**: High priority blocks medium/low priority work
5. **Track decisions**: Update task descriptions when choices are made
6. **Maintain simplicity**: No complex categorization schemes
7. **Focus on completion**: IDs are for reference, not organization
8. **Easy commands**: User can say "work on #005" and you know exactly what they mean

## Current Focus

**Immediate blockers**: Tasks [003], [004] are foundational - other tasks depend on these decisions.

**Quick wins**: Tasks [005], [006], [013] can be completed independently.

**Sequential dependencies**: [002] → [003] → [008] (monorepo setup chain)

**Completed**: [001] Commit Message Validation ✅, [002] Monorepo Tooling Selection ✅

This simple system prioritizes **ease of reference** over **categorization complexity**.

## Date Management Guidelines

### **CRITICAL: Always Check Current Date**

**Before setting or updating any due dates, the AI assistant MUST:**

1. **Check current date** using web search or other means
2. **Set realistic due dates** based on actual current date
3. **Consider priority levels** when spacing dates:
   - **High Priority**: Due within 1-5 days of current date
   - **Medium Priority**: Due within 1-2 weeks of current date  
   - **Low Priority**: Due within 2-4 weeks of current date

### **Date Update Protocol**

**When updating task dates:**
1. **Get current date first** - Never assume the date
2. **High priority tasks**: Current date + 1-5 days
3. **Medium priority tasks**: Current date + 7-14 days
4. **Low priority tasks**: Current date + 14-28 days
5. **Consider dependencies**: Dependent tasks must have later due dates than their prerequisites
6. **Account for weekends**: Prefer business days for due dates when possible

### **Example Date Setting (if current date is July 4, 2025)**
- **High Priority Task**: Due July 6-9, 2025
- **Medium Priority Task**: Due July 11-18, 2025  
- **Low Priority Task**: Due July 18 - August 1, 2025

### **Never Assume Dates**
- **DO NOT** set dates in the past relative to current date
- **DO NOT** assume it's a specific month/year without checking
- **DO NOT** use placeholder dates like "2025-01-01"
- **DO** verify current date before any date-related operations
- **DO** update existing dates if they're unrealistic based on current date

**This ensures the project board remains a practical planning tool rather than historical artifact.**